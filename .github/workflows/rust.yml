on: 
  push:
    tags:
      - 'v*'
      - 'test*'

name: CI release

env:
  RUSTFLAGS: --cfg=web_sys_unstable_apis

jobs:
  
  linuxbuild:
    name: Linux Build
    runs-on: ubuntu-latest
    permissions: write-all
    strategy:
      fail-fast: false
    steps:
      - name: Install latest stable
        uses: actions-rs/toolchain@v1
        with:
            toolchain: stable
            override: true
            components: rustfmt, clippy

      - name: Installing needed Ubuntu dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y -qq libasound2-dev libssl-dev libpulse-dev libdbus-1-dev portaudio19-dev

      - uses: actions/checkout@v2
        with:
            submodules: recursive

      - name: Cache rust compilations
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo
            target
          key: ${{ runner.os }}-cargo
          
      - name: Run cargo build release
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release
  # SAVE INSTALLER
      - id: upload-installer
        name: Upload installer
        uses: actions/upload-artifact@v4
        with:
          path: ./target/release/virtualbookplayerapp
          name: ubuntu-virtualbookplayerapp-${{ github.ref_name }}
          retention-days: 1

  winbuild:
    name: Windows Build
    runs-on: windows-latest
    permissions: write-all
    strategy:
      fail-fast: false
    steps:
      - name: Install latest stable
        uses: actions-rs/toolchain@v1
        with:
            toolchain: stable
            override: true
            components: rustfmt, clippy
      - uses: actions/checkout@v2
        with:
            submodules: recursive


      - name: Cache rust compilations
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo
            target
          key: ${{ runner.os }}-cargo

      - name: Run cargo build --release
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release

      # SAVE INSTALLER
      - id: upload-installer-win
        name: Upload windows release
        uses: actions/upload-artifact@v4
        with:
          path: target/release/virtualbookplayerapp.exe
          name: windows-virtualbookplayerapp-${{ github.ref_name }}.exe
          retention-days: 1

      - name: Run cargo build
        uses: actions-rs/cargo@v1
        with:
          command: build
          

      - id: display-downloaded-files
        name: display downloaded files
        run: |
          cp target/debug/virtualbookplayerapp.exe target/debug/virtualbookplayerapp-debug.exe

      # SAVE INSTALLER
      - id: upload-installer-win-debug
        name: Upload windows binary debug
        uses: actions/upload-artifact@v4
        with:
          path: target/debug/virtualbookplayerapp-debug.exe
          name: windows-virtualbookplayerapp-${{ github.ref_name }}-debug.exe
          retention-days: 1

          
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    permissions: write-all
    needs: [linuxbuild, winbuild]
    steps:

# DOWNLOAD INSTALLERS
    - id: download-linux-appimage
      name: Download Linux appimage
      uses: actions/download-artifact@v2
      with:
        name: ubuntu-virtualbookplayerapp-${{ github.ref_name }}

    - id: download-windows-image
      name: Download Windows appimage
      uses: actions/download-artifact@v4
      with:
        name: windows-virtualbookplayerapp-${{ github.ref_name }}.exe

    - id: download-windows-image-debug
      name: Download Windows appimage
      uses: actions/download-artifact@v4
      with:
        name: windows-virtualbookplayerapp-${{ github.ref_name }}-debug.exe

    - id: display-downloaded-files
      name: display downloaded files
      run: |
        ls -alR .

# CREATE GITHUB RELEASE AND ADD ASSETS
    - id: create-release
      name: Create GitHub release
      uses: actions/create-release@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: release-${{ github.ref_name }}
        release_name: release-${{ github.ref_name }}
        draft: true
        prerelease: true

    - id: release-linux-appimage
      name: Release Linux appimage
      uses: actions/upload-release-asset@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create-release.outputs.upload_url }}
        asset_path: virtualbookplayerapp
        asset_name: ubuntu-virtualbookplayerapp-${{ github.ref_name }}
        asset_content_type: application/x-binary


    - id: release-windows-appimage
      name: Release Windows appimage
      uses: actions/upload-release-asset@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create-release.outputs.upload_url }}
        asset_path: virtualbookplayerapp.exe
        asset_name: windows-virtualbookplayerapp-${{ github.ref_name }}.exe
        asset_content_type: application/x-binary


    - id: debug-windows-appimage
      name: Debug Windows appimage
      uses: actions/upload-release-asset@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create-release.outputs.upload_url }}
        asset_path: virtualbookplayerapp-debug.exe
        asset_name: windows-virtualbookplayerapp-${{ github.ref_name }}-debug.exe
        asset_content_type: application/x-binary

